{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","redux/actions/actionsTypes.js","redux/actions/userActions.js","App.js","reportWebVitals.js","redux/reducers/filterReducer.js","redux/reducers/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleContactInfo","e","currentTarget","value","setState","reset","submitForm","preventDefault","newContact","id","uuidv4","props","onSubmit","this","className","s","form","htmlFor","label","placeholder","formInput","onChange","pattern","title","required","type","formButton","Component","Filter","filter","search","filterLabel","filterInput","ContactList","filteredNames","deleteItem","contaktList","map","el","contaktListItem","contaktListName","contaktListButton","onClick","add","types","deleteUsers","addContact","createAction","payload","deleteContact","filterContacts","App","onHandleSubmit","contacts","some","toLowerCase","alert","onClickDelete","deleteCont","handleFilter","filterAct","normalaizedFilter","includes","mapDispatchToProps","userActions","connect","items","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","actions","filterReducer","createReducer","_","contactsReducer","contactsPersistConfig","key","storage","blacklist","contactsReducers","combineReducers","rootReducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","loading","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f88c3eff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__ceXvA\",\"filterLabel\":\"Filter_filterLabel__biDdS\"};","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleContactInfo = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const newContact = { id: uuidv4(), name, number };\r\n    this.props.onSubmit(newContact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.submitForm}>\r\n        <label htmlFor=\"name\" className={s.label}>\r\n          Name\r\n          <input\r\n            placeholder=\"Ivan Ivanov\"\r\n            className={s.formInput}\r\n            onChange={this.handleContactInfo}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            name=\"name\"\r\n            value={name}\r\n            type=\"text\"\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n           placeholder=\"09755555555\"\r\n            required\r\n            onChange={this.handleContactInfo}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            htmlFor=\"number\"\r\n            className={s.formInput}\r\n            name=\"number\"\r\n            type=\"tel\"\r\n          />\r\n        </label>\r\n        <button className={s.formButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ filter, search }) => {\r\n  return (\r\n    <label  className={s.filterLabel}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filterInput}\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={search}\r\n        type=\"text\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  search: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ filteredNames, deleteItem }) => {\r\n  return (\r\n    <ul className={s.contaktList}>\r\n      {filteredNames.map((el) => (\r\n        <li className={s.contaktListItem} key={el.id}>\r\n          <p className={s.contaktListName}>\r\n            \r\n            {el.name} : {el.number}\r\n          </p>\r\n          <button className={s.contaktListButton} type=\"button\" onClick={() => deleteItem(el.id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes={\r\n  filteredNames:PropTypes.array.isRequired,\r\n  deleteItem:PropTypes.func.isRequired}\r\n\r\n\r\n\r\nexport default ContactList;\r\n\r\n","export default{\r\nadd:\"ADD_CONTACT\",\r\ndeleteUsers:\"DELETE_CONTACT\",\r\nfilter:\"FILTER_CONTACTS\",\r\n}","import types from \"./actionsTypes\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst { add, deleteUsers, filter } = types;\r\n// ===========Redux===============\r\n// const addContact=(contactObj)=>{\r\n//     return{\r\n//         type:add,\r\n//         payload:{\r\n//             id:  uuidv4(),\r\n//             name:contactObj.name,\r\n//             number:contactObj.number,\r\n//         }\r\n//     }\r\n// }\r\n\r\n// const deleteContact=(id)=>{\r\n//     return{\r\n//         type:deleteUsers,\r\n//         payload:id\r\n//     }\r\n// }\r\n\r\n// const filterContacts=(value)=>{\r\n//     return{\r\n//         type:filter,\r\n//         payload:value,\r\n//     }\r\n\r\n// }\r\n// ===========Redux Toolkit===============\r\nconst addContact = createAction(add, ({ id, name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction(deleteUsers);\r\nconst filterContacts = createAction(filter);\r\n\r\nexport default { addContact, deleteContact, filterContacts };\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport { connect } from \"react-redux\";\r\nimport userActions from \"./redux/actions/userActions\";\r\n\r\nclass App extends Component {\r\n  onHandleSubmit = (newContact) => {\r\n    // console.log(newContact);\r\n\r\n    if (\r\n      this.props.contacts.some(\r\n        (el) => el.name.toLowerCase() === newContact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`${newContact.name} is already in contacts`);\r\n      return;\r\n    }\r\n    this.props.addContact(newContact);\r\n    // this.setState((prevState) => ({\r\n    //   contacts: [...prevState.contacts, newContact],\r\n    // }));\r\n  };\r\n\r\n  onClickDelete = (id) => {\r\n    // this.setState((prevState) => ({\r\n    //   contacts: prevState.contacts.filter((el) => el.id !== id),\r\n    // }));\r\n    this.props.deleteCont(id);\r\n  };\r\n\r\n  handleFilter = (e) => {\r\n    this.props.filterAct(e.currentTarget.value);\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.props;\r\n    const normalaizedFilter = filter.toLowerCase();\r\n    const filteredNames = contacts.filter((el) =>\r\n      el.name.toLowerCase().includes(normalaizedFilter)\r\n    );\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContactForm onSubmit={this.onHandleSubmit} />\r\n        <div>\r\n          <h2>Contacts</h2>\r\n          <Filter filter={filter} search={this.handleFilter} />\r\n          <ContactList\r\n            filteredNames={filteredNames}\r\n            deleteItem={this.onClickDelete}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = {\r\n  addContact: userActions.addContact,\r\n  deleteCont: userActions.deleteContact,\r\n  filterAct: userActions.filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {createReducer} from \"@reduxjs/toolkit\"\r\nimport actions from \"../actions/userActions\"\r\nconst{ filterContacts}=actions;\r\n// ===========Redux===============\r\n// const { filter } = types;\r\n\r\n// const filterReducer = (state = \"\", action) => {\r\n//   const { type, payload } = action;\r\n//   switch (type) {\r\n//     case filter:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n\r\n\r\n// ===========Redux Toolkit===============\r\n\r\nconst filterReducer=createReducer(\"\",{\r\n  [filterContacts]:((_,{payload})=> {return payload})\r\n})\r\n\r\nexport default filterReducer","// import types from \"../actions/actionsTypes\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"../actions/userActions\";\r\nconst { addContact, deleteContact } = actions;\r\n\r\n// ===========Redux===============\r\n// const { add, deleteUsers } = types;\r\n\r\n// const contacts = [\r\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ];\r\n\r\n// const contactsReducer = (state = contacts, action) => {\r\n//   const { type, payload } = action;\r\n//   switch (type) {\r\n//     case add:\r\n//       return [...state, payload];\r\n//     case deleteUsers:\r\n//       return state.filter((el) => el.id !== payload);\r\n//       default:\r\n//         return state\r\n//   }\r\n// };\r\n\r\n// ===========Redux Toolkit===============\r\nconst state = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst contactsReducer = createReducer(state, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => {\r\n    return state.filter((el) => el.id !== payload);\r\n  },\r\n});\r\n\r\nexport default contactsReducer;\r\n","// ===========Redux===============\r\n// import { createStore, combineReducers } from \"redux\";\r\n// import filterReducer from \"./reducers/filterReducer\";\r\n// import contactsReducer from \"./reducers/contactsReducer\";\r\n\r\n// const contactsReducers=combineReducers({\r\n//     items: contactsReducer,\r\n//     filter: filterReducer,\r\n// })\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts:contactsReducers\r\n// });\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// );\r\n// ===========Redux Toolkit===============\r\nimport {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport filterReducer from \"./reducers/filterReducer\";\r\nimport contactsReducer from \"./reducers/contactsReducer\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst contactsReducers = combineReducers({\r\n  items: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(contactsPersistConfig, contactsReducers),\r\n});\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n     <PersistGate loading={null} persistor={store.persistor}>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3c4b-\",\"formInput\":\"ContactForm_formInput__3hu3g\",\"label\":\"ContactForm_label__1tQ3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contaktList\":\"ContactList_contaktList__2ifif\",\"contaktListItem\":\"ContactList_contaktListItem__2ZTLK\",\"contaktListButton\":\"ContactList_contaktListButton__tTUYT\"};"],"sourceRoot":""}